Help on module spider:

NAME
    spider - web spiders

FILE
    spider.py

CLASSES
    Callback
        StorageCallback
            BodyStorageCallback
            HeaderStorageCallback
            WebgraphStorageCallback
    RequestFactory
    Spider
        ThreadedSpider(Spider, threaded.Threaded)
    
    class BodyStorageCallback(StorageCallback)
     |  Method resolution order:
     |      BodyStorageCallback
     |      StorageCallback
     |      Callback
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from StorageCallback:
     |  
     |  __call__(self, response)
     |  
     |  __del__(self)
    
    class Callback
     |  the base class for a callback, which both extracts links
     |  and tells the spider whether to continue (similarly to ftw and nftw in C)
     |  
     |  Methods defined here:
     |  
     |  __call__(self, response)
     |      must return a tuple as such: (continue?, links)
     |  
     |  __init__(self, url_class=None, depth=-1)
    
    class HeaderStorageCallback(StorageCallback)
     |  Method resolution order:
     |      HeaderStorageCallback
     |      StorageCallback
     |      Callback
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from StorageCallback:
     |  
     |  __call__(self, response)
     |  
     |  __del__(self)
    
    class RequestFactory
     |  a callable for creating factory requests
     |  
     |  Methods defined here:
     |  
     |  __call__(self, url)
     |  
     |  __init__(self, *args, **kwargs)
    
    class Spider
     |  a web spider (by default, single-threaded)
     |  which gets/puts URLs to/from the queue (which should implement the
     |  native Python queue API)
     |  
     |  Methods defined here:
     |  
     |  __call__(self)
     |      continually crawl until told otherwise
     |  
     |  __enter__(self)
     |  
     |  __exit__(self, *exception)
     |  
     |  __init__(self, queue=None, callback=None, request_factory=None, url_class=None, *urlopen_args, **urlopen_kwargs)
     |  
     |  handle_url(self, url)
    
    class StorageCallback(Callback)
     |  a Callback capable of storage via a db.DB instance
     |  
     |  _generate_data is intended to be overridden,
     |  however the same may be done for _generate_id
     |  
     |  default behavior is to store the full packet
     |  
     |  Methods defined here:
     |  
     |  __call__(self, response)
     |  
     |  __del__(self)
     |  
     |  __init__(self, db, *args, **kwargs)
    
    class ThreadedSpider(Spider, threaded.Threaded)
     |  Method resolution order:
     |      ThreadedSpider
     |      Spider
     |      threaded.Threaded
     |  
     |  Methods defined here:
     |  
     |  __call__(self)
     |  
     |  __init__(self, queue=None, callback=None, nthreads=1, request_factory=None, url_class=None, *args, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Spider:
     |  
     |  __enter__(self)
     |  
     |  __exit__(self, *exception)
     |  
     |  handle_url(self, url)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from threaded.Threaded:
     |  
     |  allocate_thread(self, func, *args, **kwargs)
     |      block until thread allocation is possible
    
    class WebgraphStorageCallback(StorageCallback)
     |  store the webgraph node as a CSV list
     |  
     |  note that the _generate_data function takes a list of links
     |  instead of a response
     |  
     |  Method resolution order:
     |      WebgraphStorageCallback
     |      StorageCallback
     |      Callback
     |  
     |  Methods defined here:
     |  
     |  __call__(self, response)
     |  
     |  __init__(self, *args, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from StorageCallback:
     |  
     |  __del__(self)

FUNCTIONS
    main()
        run the spider

DATA
    DEFAULT_CALLBACK = <spider.Callback instance>
